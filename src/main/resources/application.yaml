
logging:
  file:
    name: app.log
    path: ./logs
  level:
    root: INFO
    org.hibernate: ERROR
    org.hibernate.stat: INFO
    org.hibernate.SQL: INFO
    org.springframework: INFO
    com.example.demo: DEBUG
    com.github.benmanes.caffeine: DEBUG
    org:
      springframework:
        cloud:
          context: INFO

management:
  endpoint:
    health:
      show-components: always
      show-details: always
    env:
      post.enabled: true
  endpoints:
    web:
      exposure:
        include: "health,info,metrics,prometheus,refresh,env"
  health:
    defaults.enabled: false
    ping.enabled: true
    loggers.enabled: true
    db.enabled: true

server:
  port: 8080
  contextPath: /api
#  undertow:
#    options:
#      server:
#        record-request-start-time: true

# swagger-ui custom path
springdoc:
  swagger-ui:
    path: /swagger-ui.html

spring:
  servlet:
    multipart:
      enabled: true
      location: temp/
  mvc:
    problemdetails:
      enabled: true
  application:
    name: bookstore-demo
  #
  datasource:
    url: jdbc:h2:mem:bookstore.db;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=TRUE;AUTO_RECONNECT=TRUE;MODE=PostgreSQL;
    username: sa
    password: password
    driverClassName: org.h2.Driver
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    show-sql: true
    properties:
      hibernate:
        generate_statistics: true
        jdbc:
          batch_size: 10
          batch_versioned_data: true
        order_inserts: true
        order_updates: true

spring.data.redis:
  database: 0
  url: redis://${REDIS_URL:localhost:6379}
  timeout: 60000

spring.cloud.config:
  enabled: false
  import-check.enabled: false

spring.cache:
  cache-names: "books, carts"
  redis:
    time-to-live: "10m"

app:
  file:
    directory: public/images/
  rules: rules_002